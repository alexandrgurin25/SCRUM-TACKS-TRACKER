services:
  comments:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "50055:50055"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - gateway_app-network

  postgres:
    container_name: postgres_comments
    image: postgres:latest
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      PGDATA: /data/postgres_data
    volumes:
      - postgres:/data/postgres
    ports:
      - "${DB_PORT}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    networks:
      - gateway_app-network

  redis:
    image: redis:latest
    container_name: redis_comments
    ports:
      - ${REDIS_PORT}:6379
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_USER: ${REDIS_USER}
      REDIS_USER_PASSWORD: ${REDIS_USER_PASSWORD}
      REDIS_DB: ${REDIS_DB}
    volumes:
      - redis:/redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "$REDIS_PASSWORD", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true
    networks:
      - gateway_app-network

volumes:
  postgres:
  redis:

networks:
  gateway_app-network:
    external: true
