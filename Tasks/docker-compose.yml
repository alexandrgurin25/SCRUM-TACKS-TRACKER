
services:
  task-service:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${PORT}:50050"
    depends_on:
      postgres_tasks:
        condition: service_healthy
      redis_tasks:
        condition: service_healthy
    networks:
      - app-network

  postgres_tasks:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      PGDATA: /data/postgres_data
    volumes:
      - postgres_tasks:/data/postgres
    ports:
      - "${DB_PORT}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 15s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    networks:
      - app-network

  redis_tasks:
    image: redis:latest
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_USER: ${REDIS_USER}
      REDIS_USER_PASSWORD: ${REDIS_USER_PASSWORD}
      REDIS_DB: ${REDIS_DB}
    volumes:
      - redis_tasks:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a ${REDIS_PASSWORD} ping"]
      interval: 15s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    networks:
      - app-network

volumes:
  postgres_tasks:
  redis_tasks:

networks:
  app-network:
    external: true